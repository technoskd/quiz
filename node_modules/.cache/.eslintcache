[{"/home/kuldeep/developer/quiz/quiz/src/index.js":"1","/home/kuldeep/developer/quiz/quiz/src/App.js":"2","/home/kuldeep/developer/quiz/quiz/src/reportWebVitals.js":"3","/home/kuldeep/developer/quiz/quiz/src/view/pages/quiz.js":"4","/home/kuldeep/developer/quiz/quiz/src/view/pages/quizBank.js":"5","/home/kuldeep/developer/quiz/quiz/src/view/pages/result.js":"6"},{"size":545,"mtime":1648012180143,"results":"7","hashOfConfig":"8"},{"size":403,"mtime":1648043230242,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1647623587077,"results":"10","hashOfConfig":"8"},{"size":3301,"mtime":1648101510339,"results":"11","hashOfConfig":"8"},{"size":1339,"mtime":1647949460269,"results":"12","hashOfConfig":"8"},{"size":3646,"mtime":1648101984858,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"avwos2",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},"/home/kuldeep/developer/quiz/quiz/src/index.js",[],[],"/home/kuldeep/developer/quiz/quiz/src/App.js",[],[],"/home/kuldeep/developer/quiz/quiz/src/reportWebVitals.js",[],[],["34","35"],"/home/kuldeep/developer/quiz/quiz/src/view/pages/quiz.js",[],[],"/home/kuldeep/developer/quiz/quiz/src/view/pages/quizBank.js",[],[],"/home/kuldeep/developer/quiz/quiz/src/view/pages/result.js",["36","37","38"],[],"import React, { useEffect, useState } from 'react'\nimport { Link, useParams, useSearchParams } from 'react-router-dom'\nimport Emoji from '../../assets/images/smily.png'\nconst Result = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const [rating, setRating] = useState('')\n\n  const score = searchParams.get('score')\n\n  useEffect(() => {\n    if (score >= 0) {\n\n      setRating('D')\n    }\n    if (score >= 15) {\n      setRating('D+');\n    }\n    if (score >= 20) {\n      setRating('C');\n    }\n    if (score >= 25) {\n      setRating('C+');\n    }\n    if (score >= 30) {\n      setRating('B');\n    }\n    if (score >= 35) {\n      setRating('B+');\n    }\n    if (score >= 40) {\n      setRating('A-');\n    }\n    if (score >= 45) {\n      setRating('A');\n    }\n    if (score >= 50) {\n      setRating('A+');\n    }\n\n\n  }, [rating]);\n\n  return (\n    <>\n\n      <section>\n        <div className='container'>\n          <div className='row align-items-center mt-4'>\n            <div className='col-3'>  <img src={Emoji} alt='smile' /></div>\n            <div className='col-9 text-center'>\n\n              <h1 className='mb-0 text-secondary'>your carbon score <span className='fw-lighter'>is</span>  </h1>\n              <p className='fw-normal lh-1' style={{ color: '#67a72f', fontSize: '200px' }}>{rating}</p>\n              {/* <div className='possition-relative' style={{ float: 'left', display: 'contents', fontSize: '120px', borderRadius: '50%' }}></div> */}\n            </div>\n          </div>\n          <div className='row'>\n            <ul className='nav rounded-circle mt-5'>\n              <li className='nav-link' style={{ background: '#67a72f', borderRadius: '50%', margin: '1px' }}><Link to='#' className='nav-link text-white disabled' >A+</Link></li>\n              <li className='nav-link' style={{ background: '#67a72f', borderRadius: '50%', margin: '1px' }}><Link to='' className='nav-link text-white disabled' >A</Link></li>\n              <li className='nav-link' style={{ background: '#67a72f', borderRadius: '50%', margin: '1px' }}><Link to='' className='nav-link text-white disabled' >A-</Link></li>\n              <li className='nav-link' style={{ background: '#a3c51e', borderRadius: '50%', margin: '1px' }}><Link to='' className='nav-link text-white disabled' >B+</Link></li>\n              <li className='nav-link' style={{ background: '#a3c51e', borderRadius: '50%', margin: '1px' }}><Link to='' className='nav-link text-white disabled' >B</Link></li>\n              <li className='nav-link' style={{ background: '#a3c51e', borderRadius: '50%', margin: '1px' }}><Link to='' className='nav-link text-white disabled' >B-</Link></li>\n              <li className='nav-link' style={{ background: '#e0de25', borderRadius: '50%', margin: '1px' }}><Link to='' className='nav-link text-white disabled' >C+</Link></li>\n              <li className='nav-link' style={{ background: '#e0de25', borderRadius: '50%', margin: '1px' }}><Link to='' className='nav-link text-white disabled' >C</Link></li>\n              <li className='nav-link' style={{ background: '#e0de25', borderRadius: '50%', margin: '1px' }}><Link to='' className='nav-link text-white disabled' >C-</Link></li>\n              <li className='nav-link' style={{ background: '#ffcf04', borderRadius: '50%', margin: '1px' }}><Link to='' className='nav-link text-white disabled' >D+</Link></li>\n              <li className='nav-link' style={{ background: '#FFCF05', borderRadius: '50%', margin: '1px' }}><Link to='' className='nav-link text-white disabled' >D</Link></li>\n            </ul>\n\n          </div>\n\n        </div>\n      </section>\n    </>\n  )\n}\nexport default Result;",{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":2,"column":16,"nodeType":"45","messageId":"46","endLine":2,"endColumn":25},{"ruleId":"43","severity":1,"message":"47","line":5,"column":24,"nodeType":"45","messageId":"46","endLine":5,"endColumn":39},{"ruleId":"48","severity":1,"message":"49","line":42,"column":6,"nodeType":"50","endLine":42,"endColumn":14,"suggestions":"51"},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","'setSearchParams' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'score'. Either include it or remove the dependency array.","ArrayExpression",["54"],"no-global-assign","no-unsafe-negation",{"desc":"55","fix":"56"},"Update the dependencies array to be: [rating, score]",{"range":"57","text":"58"},[831,839],"[rating, score]"]